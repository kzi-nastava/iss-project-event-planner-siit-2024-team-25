CREATE TABLE accounts
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email    VARCHAR(255)                            NOT NULL,
    password VARCHAR(255)                            NOT NULL,
    status   SMALLINT                                NOT NULL,
    user_id  BIGINT,
    CONSTRAINT pk_accounts PRIMARY KEY (id)
);

CREATE TABLE activities
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    description VARCHAR(255),
    start_time  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    end_time    TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    location    VARCHAR(255),
    event_id    BIGINT                                  NOT NULL,
    CONSTRAINT pk_activities PRIMARY KEY (id)
);

CREATE TABLE administrators
(
    id BIGINT NOT NULL,
    CONSTRAINT pk_administrators PRIMARY KEY (id)
);

CREATE TABLE administrators_notifications
(
    administrator_id BIGINT NOT NULL,
    notifications_id BIGINT NOT NULL
);

CREATE TABLE budget_item
(
    id                     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    offering_category_type VARCHAR(255),
    event_id               BIGINT                                  NOT NULL,
    amount                 DOUBLE PRECISION                        NOT NULL,
    currency               VARCHAR(255),
    CONSTRAINT pk_budgetitem PRIMARY KEY (id)
);

CREATE TABLE chat
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id            BIGINT,
    event_organizer_id BIGINT,
    CONSTRAINT pk_chat PRIMARY KEY (id)
);

CREATE TABLE event_attendance
(
    attendee_id BIGINT NOT NULL,
    event_id    BIGINT NOT NULL,
    CONSTRAINT pk_eventattendance PRIMARY KEY (attendee_id, event_id)
);

CREATE TABLE event_invitation
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    guest_email     VARCHAR(255),
    invitation_code VARCHAR(255)                            NOT NULL,
    status          VARCHAR(255)                            NOT NULL,
    event_id        BIGINT,
    CONSTRAINT pk_eventinvitation PRIMARY KEY (id)
);

CREATE TABLE event_organizers
(
    id           BIGINT NOT NULL,
    phone_number VARCHAR(16),
    country      VARCHAR(255),
    city         VARCHAR(255),
    address      VARCHAR(255),
    latitude     BIGINT,
    longitude    BIGINT,
    CONSTRAINT pk_event_organizers PRIMARY KEY (id)
);

CREATE TABLE event_organizers_notifications
(
    event_organizer_id BIGINT NOT NULL,
    notifications_id   BIGINT NOT NULL
);

CREATE TABLE event_types
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(255),
    name        VARCHAR(255)                            NOT NULL,
    is_active   BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_event_types PRIMARY KEY (id)
);

CREATE TABLE event_types_offering_categories
(
    event_type_id          BIGINT NOT NULL,
    offering_categories_id BIGINT NOT NULL
);

CREATE TABLE events
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_type_id    BIGINT                                  NOT NULL,
    name             VARCHAR(255)                            NOT NULL,
    description      VARCHAR(255),
    max_participants INTEGER,
    privacy_type     SMALLINT                                NOT NULL,
    start_date       date                                    NOT NULL,
    end_date         date                                    NOT NULL,
    start_time       time WITHOUT TIME ZONE                  NOT NULL,
    end_time         time WITHOUT TIME ZONE                  NOT NULL,
    organizer_id     BIGINT                                  NOT NULL,
    created_date     TIMESTAMP WITHOUT TIME ZONE,
    country          VARCHAR(255),
    city             VARCHAR(255),
    address          VARCHAR(255),
    latitude         BIGINT,
    longitude        BIGINT,
    CONSTRAINT pk_events PRIMARY KEY (id)
);

CREATE TABLE favorite_events
(
    user_id            BIGINT NOT NULL,
    favorite_events_id BIGINT NOT NULL
);

CREATE TABLE favorite_products
(
    favorite_products_id BIGINT NOT NULL,
    users_id             BIGINT NOT NULL
);

CREATE TABLE favorite_services
(
    favorite_services_id BIGINT NOT NULL,
    users_id             BIGINT NOT NULL
);

CREATE TABLE message
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    chat_id   BIGINT,
    content   VARCHAR(255),
    timestamp TIMESTAMP WITHOUT TIME ZONE,
    sender_id BIGINT,
    CONSTRAINT pk_message PRIMARY KEY (id)
);

CREATE TABLE notification
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    message               VARCHAR(255)                            NOT NULL,
    is_viewed             BOOLEAN                                 NOT NULL,
    entity_id             BIGINT                                  NOT NULL,
    notification_category VARCHAR(255)                            NOT NULL,
    created_date          TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_notification PRIMARY KEY (id)
);

CREATE TABLE offering_images
(
    offering_id BIGINT NOT NULL,
    images_url  VARCHAR(255)
);

CREATE TABLE offering_review
(
    id BIGINT NOT NULL,
    CONSTRAINT pk_offering_review PRIMARY KEY (id)
);

CREATE TABLE offering_type
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    description VARCHAR(255),
    status      VARCHAR(255),
    CONSTRAINT pk_offeringtype PRIMARY KEY (id)
);

CREATE TABLE offerings
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                 VARCHAR(255)                            NOT NULL,
    description          VARCHAR(255)                            NOT NULL,
    price                DOUBLE PRECISION                        NOT NULL,
    discount             DOUBLE PRECISION                        NOT NULL,
    is_visible           BOOLEAN                                 NOT NULL,
    is_available         BOOLEAN                                 NOT NULL,
    status               SMALLINT                                NOT NULL,
    offering_category_id BIGINT,
    owner_id             BIGINT                                  NOT NULL,
    CONSTRAINT pk_offerings PRIMARY KEY (id)
);

CREATE TABLE offerings_event_types
(
    offering_id    BIGINT NOT NULL,
    event_types_id BIGINT NOT NULL
);

CREATE TABLE owner_company_pictures
(
    owner_id         BIGINT NOT NULL,
    company_pictures VARCHAR(255)
);

CREATE TABLE owners
(
    id            BIGINT       NOT NULL,
    company_name  VARCHAR(255) NOT NULL,
    contact_phone VARCHAR(16),
    description   TEXT         NOT NULL,
    country       VARCHAR(255),
    city          VARCHAR(255),
    address       VARCHAR(255),
    latitude      BIGINT,
    longitude     BIGINT,
    CONSTRAINT pk_owners PRIMARY KEY (id)
);

CREATE TABLE owners_notifications
(
    owner_id         BIGINT NOT NULL,
    notifications_id BIGINT NOT NULL
);

CREATE TABLE product
(
    id BIGINT NOT NULL,
    CONSTRAINT pk_product PRIMARY KEY (id)
);

CREATE TABLE product_event_types
(
    product_id     BIGINT NOT NULL,
    event_types_id BIGINT NOT NULL
);

CREATE TABLE purchase
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date date                                    NOT NULL,
    start_time time WITHOUT TIME ZONE                  NOT NULL,
    end_date   date                                    NOT NULL,
    end_time   time WITHOUT TIME ZONE                  NOT NULL,
    event_id   BIGINT,
    product_id BIGINT,
    service_id BIGINT,
    amount     DOUBLE PRECISION                        NOT NULL,
    currency   VARCHAR(255),
    CONSTRAINT pk_purchase PRIMARY KEY (id)
);

CREATE TABLE register_requests
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    verification_code VARCHAR(255)                            NOT NULL,
    expiration_time   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    account_id        BIGINT                                  NOT NULL,
    CONSTRAINT pk_register_requests PRIMARY KEY (id)
);

CREATE TABLE report
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    reported_user_id BIGINT,
    user_id          BIGINT,
    report_message   VARCHAR(255),
    created_date     TIMESTAMP WITHOUT TIME ZONE,
    is_viewed        BOOLEAN,
    CONSTRAINT pk_report PRIMARY KEY (id)
);

CREATE TABLE review
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comment     VARCHAR(255)                            NOT NULL,
    rating      INTEGER                                 NOT NULL,
    status      VARCHAR(255),
    purchase_id BIGINT,
    CONSTRAINT pk_review PRIMARY KEY (id)
);

CREATE TABLE service
(
    id                    BIGINT  NOT NULL,
    specifics             VARCHAR(255),
    duration              INTEGER NOT NULL,
    reservation_deadline  INTEGER NOT NULL,
    cancellation_deadline INTEGER NOT NULL,
    reservation_type      VARCHAR(255),
    CONSTRAINT pk_service PRIMARY KEY (id)
);

CREATE TABLE service_event_types
(
    service_id     BIGINT NOT NULL,
    event_types_id BIGINT NOT NULL
);

CREATE TABLE suspensions
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    expiration_time TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    account_id      BIGINT                                  NOT NULL,
    CONSTRAINT pk_suspensions PRIMARY KEY (id)
);

CREATE TABLE user_blocks
(
    blocked_id BIGINT NOT NULL,
    blocker_id BIGINT NOT NULL
);

CREATE TABLE users
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name          VARCHAR(255)                            NOT NULL,
    last_name           VARCHAR(255)                            NOT NULL,
    profile_picture_url VARCHAR(255),
    user_role           SMALLINT                                NOT NULL,
    account_id          BIGINT                                  NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE users_notifications
(
    user_id          BIGINT NOT NULL,
    notifications_id BIGINT NOT NULL
);

ALTER TABLE register_requests
    ADD CONSTRAINT uc_register_requests_account UNIQUE (account_id);

ALTER TABLE suspensions
    ADD CONSTRAINT uc_suspensions_account UNIQUE (account_id);

ALTER TABLE users
    ADD CONSTRAINT uc_users_account UNIQUE (account_id);

ALTER TABLE accounts
    ADD CONSTRAINT FK_ACCOUNTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE activities
    ADD CONSTRAINT FK_ACTIVITIES_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id);

ALTER TABLE administrators
    ADD CONSTRAINT FK_ADMINISTRATORS_ON_ID FOREIGN KEY (id) REFERENCES users (id);

ALTER TABLE budget_item
    ADD CONSTRAINT FK_BUDGETITEM_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id);

ALTER TABLE chat
    ADD CONSTRAINT FK_CHAT_ON_EVENTORGANIZER FOREIGN KEY (event_organizer_id) REFERENCES event_organizers (id);

ALTER TABLE chat
    ADD CONSTRAINT FK_CHAT_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE event_attendance
    ADD CONSTRAINT FK_EVENTATTENDANCE_ON_ATTENDEEID FOREIGN KEY (attendee_id) REFERENCES users (id);

ALTER TABLE event_attendance
    ADD CONSTRAINT FK_EVENTATTENDANCE_ON_EVENTID FOREIGN KEY (event_id) REFERENCES events (id);

ALTER TABLE event_invitation
    ADD CONSTRAINT FK_EVENTINVITATION_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id);

ALTER TABLE events
    ADD CONSTRAINT FK_EVENTS_ON_EVENTTYPE FOREIGN KEY (event_type_id) REFERENCES event_types (id);

ALTER TABLE events
    ADD CONSTRAINT FK_EVENTS_ON_ORGANIZER FOREIGN KEY (organizer_id) REFERENCES event_organizers (id);

ALTER TABLE event_organizers
    ADD CONSTRAINT FK_EVENT_ORGANIZERS_ON_ID FOREIGN KEY (id) REFERENCES users (id);

ALTER TABLE message
    ADD CONSTRAINT FK_MESSAGE_ON_CHAT FOREIGN KEY (chat_id) REFERENCES chat (id);

ALTER TABLE message
    ADD CONSTRAINT FK_MESSAGE_ON_SENDER FOREIGN KEY (sender_id) REFERENCES users (id);

ALTER TABLE offerings
    ADD CONSTRAINT FK_OFFERINGS_ON_OFFERINGCATEGORY FOREIGN KEY (offering_category_id) REFERENCES offering_type (id);

ALTER TABLE offerings
    ADD CONSTRAINT FK_OFFERINGS_ON_OWNER FOREIGN KEY (owner_id) REFERENCES owners (id);

ALTER TABLE offering_review
    ADD CONSTRAINT FK_OFFERING_REVIEW_ON_ID FOREIGN KEY (id) REFERENCES review (id);

ALTER TABLE owners
    ADD CONSTRAINT FK_OWNERS_ON_ID FOREIGN KEY (id) REFERENCES users (id);

ALTER TABLE product
    ADD CONSTRAINT FK_PRODUCT_ON_ID FOREIGN KEY (id) REFERENCES offerings (id);

ALTER TABLE purchase
    ADD CONSTRAINT FK_PURCHASE_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id);

ALTER TABLE purchase
    ADD CONSTRAINT FK_PURCHASE_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE purchase
    ADD CONSTRAINT FK_PURCHASE_ON_SERVICE FOREIGN KEY (service_id) REFERENCES service (id);

ALTER TABLE register_requests
    ADD CONSTRAINT FK_REGISTER_REQUESTS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE report
    ADD CONSTRAINT FK_REPORT_ON_REPORTEDUSER FOREIGN KEY (reported_user_id) REFERENCES users (id);

ALTER TABLE report
    ADD CONSTRAINT FK_REPORT_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE review
    ADD CONSTRAINT FK_REVIEW_ON_PURCHASE FOREIGN KEY (purchase_id) REFERENCES purchase (id);

ALTER TABLE service
    ADD CONSTRAINT FK_SERVICE_ON_ID FOREIGN KEY (id) REFERENCES offerings (id);

ALTER TABLE suspensions
    ADD CONSTRAINT FK_SUSPENSIONS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE administrators_notifications
    ADD CONSTRAINT fk_admnot_on_administrator FOREIGN KEY (administrator_id) REFERENCES administrators (id);

ALTER TABLE administrators_notifications
    ADD CONSTRAINT fk_admnot_on_notification FOREIGN KEY (notifications_id) REFERENCES notification (id);

ALTER TABLE event_organizers_notifications
    ADD CONSTRAINT fk_eveorgnot_on_event_organizer FOREIGN KEY (event_organizer_id) REFERENCES event_organizers (id);

ALTER TABLE event_organizers_notifications
    ADD CONSTRAINT fk_eveorgnot_on_notification FOREIGN KEY (notifications_id) REFERENCES notification (id);

ALTER TABLE event_types_offering_categories
    ADD CONSTRAINT fk_evetypoffcat_on_event_type FOREIGN KEY (event_type_id) REFERENCES event_types (id);

ALTER TABLE event_types_offering_categories
    ADD CONSTRAINT fk_evetypoffcat_on_offering_category FOREIGN KEY (offering_categories_id) REFERENCES offering_type (id);

ALTER TABLE favorite_events
    ADD CONSTRAINT fk_faveve_on_event FOREIGN KEY (favorite_events_id) REFERENCES events (id);

ALTER TABLE favorite_events
    ADD CONSTRAINT fk_faveve_on_user FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE favorite_products
    ADD CONSTRAINT fk_favpro_on_product FOREIGN KEY (favorite_products_id) REFERENCES product (id);

ALTER TABLE favorite_products
    ADD CONSTRAINT fk_favpro_on_user FOREIGN KEY (users_id) REFERENCES users (id);

ALTER TABLE favorite_services
    ADD CONSTRAINT fk_favser_on_service FOREIGN KEY (favorite_services_id) REFERENCES service (id);

ALTER TABLE favorite_services
    ADD CONSTRAINT fk_favser_on_user FOREIGN KEY (users_id) REFERENCES users (id);

ALTER TABLE offering_images
    ADD CONSTRAINT fk_offering_images_on_offering FOREIGN KEY (offering_id) REFERENCES offerings (id);

ALTER TABLE offerings_event_types
    ADD CONSTRAINT fk_offevetyp_on_event_type FOREIGN KEY (event_types_id) REFERENCES event_types (id);

ALTER TABLE offerings_event_types
    ADD CONSTRAINT fk_offevetyp_on_offering FOREIGN KEY (offering_id) REFERENCES offerings (id);

ALTER TABLE owner_company_pictures
    ADD CONSTRAINT fk_owner_companypictures_on_owner FOREIGN KEY (owner_id) REFERENCES owners (id);

ALTER TABLE owners_notifications
    ADD CONSTRAINT fk_ownnot_on_notification FOREIGN KEY (notifications_id) REFERENCES notification (id);

ALTER TABLE owners_notifications
    ADD CONSTRAINT fk_ownnot_on_owner FOREIGN KEY (owner_id) REFERENCES owners (id);

ALTER TABLE product_event_types
    ADD CONSTRAINT fk_proevetyp_on_event_type FOREIGN KEY (event_types_id) REFERENCES event_types (id);

ALTER TABLE product_event_types
    ADD CONSTRAINT fk_proevetyp_on_product FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE service_event_types
    ADD CONSTRAINT fk_serevetyp_on_event_type FOREIGN KEY (event_types_id) REFERENCES event_types (id);

ALTER TABLE service_event_types
    ADD CONSTRAINT fk_serevetyp_on_service FOREIGN KEY (service_id) REFERENCES service (id);

ALTER TABLE user_blocks
    ADD CONSTRAINT fk_useblo_on_blocked FOREIGN KEY (blocked_id) REFERENCES users (id);

ALTER TABLE user_blocks
    ADD CONSTRAINT fk_useblo_on_blocker FOREIGN KEY (blocker_id) REFERENCES users (id);

ALTER TABLE users_notifications
    ADD CONSTRAINT fk_usenot_on_notification FOREIGN KEY (notifications_id) REFERENCES notification (id);

ALTER TABLE users_notifications
    ADD CONSTRAINT fk_usenot_on_user FOREIGN KEY (user_id) REFERENCES users (id);